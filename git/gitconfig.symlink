[include]
  path = .gitcredentials

[hub]
  protocol = https

[pager]
  difftool = true
# [pager]
#   difff = diff-so-fancy | less --tabs=1,5 -RFX
#   show = diff-so-fancy | less --tabs=1,5 -RFX

[alias]
  sshow   = "!f() { git stash show stash^{/$*} -p; }; f"
  f       = commit -m
  co      = checkout
  st      = status
  df      = diff
  subup   = submodule update --recursive --init
  puff    = pull --ff --ff-only
  unstage = reset HEAD --
  last    = log -1 --stat HEAD
  amen    = commit --amend --no-edit
  count   = !git shortlog -sn
  hub     = !hub
  rbis    = rebase -i origin/stable
  rbim    = rebase -i origin/master
  rbid    = rebase -i origin/develop
  rbisf   = "!git fetch origin stable && git rbis"
  rbimf   = "!git fetch origin master && git rbim"
  rbidf   = "!git fetch origin develop && git rbid"
  rbmf    = "!git fetch origin master && git rebase origin/master"
  shelve  = stash
  unshelve = stash pop
  stat    = log -1 --stat
  lg      = "log --decorate --branches=* --oneline --graph origin/master.."
  lga     = "log --decorate --oneline --graph --branches=*"
  lgall   = "log --decorate --oneline --graph --all"
  l50     = "!git log --abbrev-commit --date=short --pretty=format:'%x00%h%x00%cd%x00%s%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m \\033[32m%s\\033[0m  %-50s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, $3, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$4), $5, $6 }' | less -R"
  l80     = "!git log --abbrev-commit --date=short --pretty=format:'%x00%h%x00%cd%x00%s%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m \\033[32m%s\\033[0m  %-80s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, $3, gensub(/(.{79}).{2,}/, \"\\\\1…\",\"g\",$4), $5, $6 }' | less -R"
  lg50    = "!git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-50s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }' | less -R"
  lg80    = "!git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-80s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{79}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }' | less -R"
  dashboard = "!f() { for branch in $(git branch -a | cut -c 3-); do if [ ! $branch = '->' ]; then branches=\"$branches$(git log --no-walk --pretty=format:\"%ct (%cr)\t%Cgreen$branch%Creset %Cblue%an%Creset\" $branch)\\n\"; fi; done; echo $branches | sort -rnk1 |  cut -c 12- | head -n40; }; f"
  feature-pull-request = "!hub  pull-request -b development"
  oldest-ancestor = !zsh -c 'diff --old-line-format= --new-line-format= <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | head -1' -
  branchdiff = !sh -c \"git diff `git oldest-ancestor`..\"
  branchlog = !sh -c \"git log `git oldest-ancestor`..\"
  pushf = push --force-with-lease
  branch-clean = "!git branch --merged | egrep -v '(^\\*|master|develop)' | xargs git branch -d"
  cleanup = !git fetch -ap && git branch-clean
  branch-stat = !git diff --shortstat `git merge-base HEAD origin/master`
  abs = !git absorb -b `git merge-base HEAD origin/master` -r
  set-upstream = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`
  bu = !git branch | grep ullrich
  pu = push -u
  wip = for-each-ref --sort='authordate:iso8601' --format=' %(color:green)%(authordate:relative)%09%(color:white)%(refname:short)' refs/heads
  recent = !git for-each-ref --sort=-committerdate refs/heads --color=always --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)'|column -ts'|'
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
  b = ! git checkout $(git branch | fzf | vim -es '+0norm 2x' '+%print' '+q!' /dev/stdin)

[color]
  diff   = auto
  status = auto
  branch = auto
  ui     = true

[core]
  excludesfile = ~/.gitignore
  editor = vim
  pager = diff-so-fancy | less --tabs=4 -RFX

[apply]
  whitespace = nowarn

[mergetool]
  keepBackup = false

[difftool]
  prompt = false

[help]
  autocorrect = 1

[push]
  # push the current branch to update a branch with the same name on the receiving end
  default = current
	autoSetupRemote = true
[rebase]
  autoStash = true
[pull]
  rebase = true
[init]
  defaultBranch = main
[interactive]
  diffFilter = diff-so-fancy --patch
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[user]
	name = Ullrich Schäfer
	email = hi+github@ullrich.is
  signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID/Pj/FR60WpG0vwNl254Bnm3sQ2m4YISAKnboz4G8nI
[gpg]
  format = ssh
[gpg "ssh"]
  program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"
[commit]
  gpgsign = true
[diff]
  external = difft
  tool = difftastic
[difftool "difftastic"]
  cmd = difft "$LOCAL" "$REMOTE"
