[include]
  path = .gitcredentials

[hub]
  protocol = https

[alias]
  co      = checkout
  st      = status
  df      = diff
  subup   = submodule update --recursive --init
  puff    = pull --ff --ff-only
  unstage = reset HEAD --
  last    = log -1 HEAD
  amen    = commit --amend -C HEAD
  count   = !git shortlog -sn
  hub     = !hub
  x       = !gitx
  rbis     = rebase -i origin/stable
  rbim     = rebase -i origin/master

  l50     = "!git log --abbrev-commit --date=short --pretty=format:'%x00%h%x00%cd%x00%s%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m \\033[32m%s\\033[0m  %-50s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, $3, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$4), $5, $6 }' | less -R"
  l80     = "!git log --abbrev-commit --date=short --pretty=format:'%x00%h%x00%cd%x00%s%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m \\033[32m%s\\033[0m  %-80s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, $3, gensub(/(.{79}).{2,}/, \"\\\\1…\",\"g\",$4), $5, $6 }' | less -R"
  lg50    = "!git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-50s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }' | less -R"
  lg80    = "!git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-80s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{79}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }' | less -R"
  dashboard = "!f() { for branch in $(git branch -a | cut -c 3-); do if [ ! $branch = '->' ]; then branches=\"$branches$(git log --no-walk --pretty=format:\"%ct (%cr)\t%Cgreen$branch%Creset %Cblue%an%Creset\" $branch)\\n\"; fi; done; echo $branches | sort -rnk1 |  cut -c 12- | head -n40; }; f"
  feature-pull-request = "!hub  pull-request -b development"
  oldest-ancestor = !zsh -c 'diff --old-line-format= --new-line-format= <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | head -1' -
  branchdiff = !sh -c \"git diff `git oldest-ancestor`..\"
  branchlog = !sh -c \"git log `git oldest-ancestor`..\"

[color]
  diff   = auto
  status = auto
  branch = auto
  ui     = true

[core]
  excludesfile = ~/.gitignore
  editor = vim

[apply]
  whitespace = nowarn

[mergetool]
  keepBackup = false

[difftool]
  prompt = false

[help]
  autocorrect = 1

[push]
  # push the current branch to update a branch with the same name on the receiving end
  default = current
