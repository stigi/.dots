ZSH_THEME_HG_PROMPT_COLOR=$FG[045]
ZSH_THEME_HG_PROMPT_BOOKMARK_COLOR=$FG[063]

ZSH_THEME_HG_PROMPT_AHEAD_COLOR=$FG[118]
ZSH_THEME_HG_PROMPT_BEHIND_COLOR=$FG[009]

ZSH_THEME_HG_PROMPT_PREFIX="%{$ZSH_THEME_HG_PROMPT_COLOR%}hg:("
ZSH_THEME_HG_PROMPT_SUFFIX="%{$ZSH_THEME_HG_PROMPT_COLOR%})%{$reset_color%}"

ZSH_THEME_HG_PROMPT_DIRTY="$FG[009] â—‹ "
ZSH_THEME_HG_PROMPT_CLEAN=" "

hg=""

function in_hg() {
  d=$PWD
  while : ; do
    if test -d "$d/.hg" ; then
      hg=$d
      echo 1
      break
    fi
    test "$d" = / && break
    d=$(cd -P "$d/.." && echo "$PWD")
  done
}


function hg_prompt_bookmark() {
  d=$PWD
  while : ; do
    if test -d "$d/.hg" ; then
      hg=$d
      break
    fi
    test "$d" = / && break
    d=$(cd -P "$d/.." && echo "$PWD")
  done

  local dirstate=$(test -f $hg/.hg/dirstate && \
    hexdump -vn 20 -e '1/1 "%02x"' $hg/.hg/dirstate || \
    echo "empty")
  local current="$hg/.hg/bookmarks.current"
  if  [[ -f "$current" ]]; then
    br=$(cat "$current")
  else
    br=$(echo $dirstate | cut -c 1-7)
  fi
  if [ -n "$br" ]; then
    printf "$br"
  fi
}

function hg_prompt_branch() {
  echo "$ZSH_THEME_HG_PROMPT_BOOKMARK_COLOR$(hg branch)"
}

function hg_prompt {
  if [ $(in_hg) ]; then
    echo "$ZSH_THEME_HG_PROMPT_PREFIX$(hg_prompt_branch)/$(hg_prompt_bookmark)$(hg_extra)$ZSH_THEME_HG_PROMPT_SUFFIX$(hg_prompt_dirty)$ZSH_THEME_HG_PROMPT_CLEAN"
  fi
}

function hg_short_prompt {
  if [ $(in_hg) ]; then
    echo "$ZSH_THEME_HG_PROMPT_PREFIX$(hg_prompt_bookmark)$(hg_extra)$ZSH_THEME_HG_PROMPT_SUFFIX$(hg_prompt_dirty)$ZSH_THEME_HG_PROMPT_CLEAN"
  fi
}

function hg_extra {
  d=$PWD
  while : ; do
    if test -d "$d/.hg" ; then
      hg=$d
      break
    fi
    test "$d" = / && break
    d=$(cd -P "$d/.." && echo "$PWD")
  done

  local extra
    if [ -f "$hg/.hg/bisect.state" ]; then
      extra="|BISECT"
    elif [ -f "$hg/.hg/histedit-state" ]; then
      extra="|HISTEDIT"
    elif [ -f "$hg/.hg/graftstate" ]; then
      extra="|GRAFT"
    elif [ -f "$hg/.hg/unshelverebasestate" ]; then
      extra="|UNSHELVE"
    elif [ -f "$hg/.hg/rebasestate" ]; then
      extra="|REBASE"
    elif [ -d "$hg/.hg/merge" ]; then
      extra="|MERGE"
    fi
  echo $extra
}

function hg_prompt_dirty_choose {
  echo $2
  return
  if [ $(in_hg) ]; then
    hg status 2> /dev/null | grep -Eq '^\s*[ACDIM!?L]'
    if [ $pipestatus[-1] -eq 0 ]; then
      # Grep exits with 0 when "One or more lines were selected", return "dirty".
      echo $1
    else
      # Otherwise, no lines were found, or an error occurred. Return clean.
      echo $2
    fi
  fi
}

function hg_prompt_dirty {
  hg_prompt_dirty_choose $ZSH_THEME_HG_PROMPT_DIRTY
}

function hgic() {
    hg incoming "$@" | grep "changeset" | wc -l
}

function hgoc() {
    hg outgoing "$@" | grep "changeset" | wc -l
}
